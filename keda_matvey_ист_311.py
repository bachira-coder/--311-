# -*- coding: utf-8 -*-
"""Keda Matvey ИСТ-311

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mphyLfs0p6tfPcCegDYWON0uLnKs3brL
"""



import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from math import*
celsius=[[-67.0], [-34.0], [0], [34.0], [54.0], [67.0], [100.0]]
fahrenheit=[[-88.6], [-29.2], [32.0], [93.2], [129.2], [152.6], [212.0]]
plt.figure(figsize=(15,8), dpi=50)
plt.scatter(celsius,fahrenheit, label='Входные значения', color='green', marker='$f$');
plt.xlabel('celsius')
plt.ylabel('fahrenheit')
plt.legend()
plt.grid(True)
plt.show()

for c,f in zip(celsius, fahrenheit):
  print(f'цельсия {c} = фаренгейт {f}')

lr=LinearRegression()
lr.fit(celsius,fahrenheit)
lr.predict([[256],[123]])
lr.coef_
lr.intercept_
celsius_test=[[-50], [10], [30], [20], [10], [70], [87]]
fahrenheit_test = lr.predict(celsius_test)
fahrenheit_test

for c,f in zip(celsius_test, fahrenheit_test):
  print(f'цельсия {c} = фаренгейт {f}')

import numpy as np
x_range = np.arange(-70,120)
y_range = x_range*1.8+32
plt.figure(figsize=(15,8), dpi=280)
plt.plot(x_range,y_range, label='yравнение', linewidth='1')
plt.scatter(celsius,fahrenheit, label='входные данные', color='green')
plt.scatter(celsius_test,fahrenheit_test, label='предсказанное значение', color='blue')
plt.xlabel('Цельсия')
plt.ylabel('Фаренгейта')
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
fahrenheit=[[-88.6], [-29.2], [32.0], [93.2], [129.2], [152.6], [212.0]]
kelvin=[[206.15], [239.15], [273.15], [307.15], [327.15], [340.15], [373.15]]
plt.figure(figsize=(15,8), dpi=50)
plt.scatter(fahrenheit,kelvin,  label='Входные значения', color='green', marker='$f$');
plt.xlabel('fahrenheit')
plt.ylabel('kelvin')
plt.legend()
plt.grid(True)
plt.show()

for f,k in zip(fahrenheit, kelvin):
  print(f'фаренгейт {f} = кельвин {k}')

lr=LinearRegression()
lr.fit(fahrenheit,kelvin)
lr.predict([[256],[123]])
lr.coef_
lr.intercept_
fahrenheit_test=[[-50], [10], [30], [20], [10], [70], [87]]
kelvin_test = lr.predict(fahrenheit_test)
kelvin_test

for f,k in zip(fahrenheit_test, kelvin_test):
  print(f'фаренгейт{f} = кельвин{k}')

import numpy as np
x_range = np.arange(-70,120)
y_range = (x_range - 32) * 5/9 + 273.15
plt.figure(figsize=(15,8), dpi=280)
plt.plot(x_range,y_range, label='yравнение', linewidth='1')
plt.scatter(fahrenheit,kelvin, label='входные данные', color='green')
plt.scatter(fahrenheit_test,kelvin_test, label='предсказанное значение', color='blue')
plt.xlabel('Фаренгейта')
plt.ylabel('Кельвина')
plt.grid(True)
plt.show()

!git clone https://github.com/bachira-coder/--311-

data = np.random.randn(1000)
plt.hist(data, bins=30, color='blue', edgecolor='black')
plt.title("Гистограмма")
plt.xlabel("Значения")
plt.ylabel("Частота")
plt.show()

categories = ['Категория A', 'Категория B', 'Категория C', 'Категория D']
values = [23, 17, 35, 29]
plt.bar(categories, values, color='red', edgecolor='black')
plt.title("Столбчатая диаграмма")
plt.xlabel("Категории")
plt.ylabel("Значения")
plt.show()

data = [np.random.normal(0, std, 100) for std in range(1, 4)]
plt.boxplot(data, vert=True, patch_artist=True, labels=['Группа 1', 'Группа 2', 'Группа 3'])
plt.title("Диаграмма размаха")
plt.xlabel("Группы")
plt.ylabel("Значения")
plt.show()

print(math.e)